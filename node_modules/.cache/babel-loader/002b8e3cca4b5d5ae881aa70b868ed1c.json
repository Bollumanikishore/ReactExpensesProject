{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Proj\\\\01-starting-setup\\\\01-starting-setup\\\\src\\\\Components\\\\ExpensesChart.js\";\nimport Chart from './Chart/Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpensesChart(props) {\n  const expensesChartValues = [{\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'Apr',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'Jul',\n    value: 0\n  }, {\n    label: 'Aug',\n    value: 0\n  }, {\n    label: 'Sep',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }];\n\n  for (const exp of props.expense) {\n    const expMonth = exp.date.getMonth();\n    expensesChartValues[expMonth].value += exp.cost;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: expensesChartValues\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 13\n  }, this);\n}\n\n_c = ExpensesChart;\n;\nexport default ExpensesChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["Chart","ExpensesChart","props","expensesChartValues","label","value","exp","expense","expMonth","date","getMonth","cost"],"sources":["C:/React Proj/01-starting-setup/01-starting-setup/src/Components/ExpensesChart.js"],"sourcesContent":["import Chart from './Chart/Chart'\r\nfunction ExpensesChart(props)\r\n{\r\n    const expensesChartValues=[\r\n        {label: 'Jan',value : 0},\r\n        {label: 'Feb',value : 0},\r\n        {label: 'Mar',value : 0},\r\n        {label: 'Apr',value : 0},\r\n        {label: 'May',value : 0},\r\n        {label: 'Jun',value : 0},\r\n        {label: 'Jul',value : 0},\r\n        {label: 'Aug',value : 0},\r\n        {label: 'Sep',value : 0},\r\n        {label: 'Oct',value : 0},\r\n        {label: 'Nov',value : 0},\r\n        {label: 'Dec',value : 0}\r\n    ];\r\n    for(const exp of props.expense)\r\n    {\r\n        const expMonth = exp.date.getMonth();\r\n        expensesChartValues[expMonth].value += exp.cost;\r\n    }\r\n    return (<Chart dataPoints={expensesChartValues}/>);\r\n};\r\nexport default ExpensesChart;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,eAAlB;;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EACA;EACI,MAAMC,mBAAmB,GAAC,CACtB;IAACC,KAAK,EAAE,KAAR;IAAcC,KAAK,EAAG;EAAtB,CADsB,EAEtB;IAACD,KAAK,EAAE,KAAR;IAAcC,KAAK,EAAG;EAAtB,CAFsB,EAGtB;IAACD,KAAK,EAAE,KAAR;IAAcC,KAAK,EAAG;EAAtB,CAHsB,EAItB;IAACD,KAAK,EAAE,KAAR;IAAcC,KAAK,EAAG;EAAtB,CAJsB,EAKtB;IAACD,KAAK,EAAE,KAAR;IAAcC,KAAK,EAAG;EAAtB,CALsB,EAMtB;IAACD,KAAK,EAAE,KAAR;IAAcC,KAAK,EAAG;EAAtB,CANsB,EAOtB;IAACD,KAAK,EAAE,KAAR;IAAcC,KAAK,EAAG;EAAtB,CAPsB,EAQtB;IAACD,KAAK,EAAE,KAAR;IAAcC,KAAK,EAAG;EAAtB,CARsB,EAStB;IAACD,KAAK,EAAE,KAAR;IAAcC,KAAK,EAAG;EAAtB,CATsB,EAUtB;IAACD,KAAK,EAAE,KAAR;IAAcC,KAAK,EAAG;EAAtB,CAVsB,EAWtB;IAACD,KAAK,EAAE,KAAR;IAAcC,KAAK,EAAG;EAAtB,CAXsB,EAYtB;IAACD,KAAK,EAAE,KAAR;IAAcC,KAAK,EAAG;EAAtB,CAZsB,CAA1B;;EAcA,KAAI,MAAMC,GAAV,IAAiBJ,KAAK,CAACK,OAAvB,EACA;IACI,MAAMC,QAAQ,GAAGF,GAAG,CAACG,IAAJ,CAASC,QAAT,EAAjB;IACAP,mBAAmB,CAACK,QAAD,CAAnB,CAA8BH,KAA9B,IAAuCC,GAAG,CAACK,IAA3C;EACH;;EACD,oBAAQ,QAAC,KAAD;IAAO,UAAU,EAAER;EAAnB;IAAA;IAAA;IAAA;EAAA,QAAR;AACH;;KAtBQF,a;AAsBR;AACD,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}